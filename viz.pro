######################################################################
# Automatically generated by qmake (3.1) Wed Jan 24 17:35:15 2018
######################################################################
# run: qmake

system($${QMAKE_MKDIR} obj)
system($${QMAKE_MKDIR} src/moc)
system($${QMAKE_MKDIR} src/ui)
TEMPLATE = app
TARGET = gfaviz
TARGET.path = /usr/local/gfaviz
TARGET.files = gfaviz
INSTALLS += TARGET
INCLUDEPATH += . ./src
QT += widgets
FORMS = ui/*.ui
UI_DIR = src/ui/
DEFINES += NDEBUG
QMAKE_CXXFLAGS_WARN_ON += -Wall -Wno-unknown-pragmas -Wno-unused-parameter -Wno-class-memaccess -Wno-unknown-warning-option
defined(NOSVG,var) {
  DEFINES += NOSVG
} else {
  QT += svg
}
defined(CXX,var) {
  QMAKE_CXX = $${CXX}
  QMAKE_LINK = $${CXX}
}
defined(DEBUG,var) {
  QMAKE_CXXFLAGS += -g
  QMAKE_LFLAGS += -g
}

# The following define makes your compiler warn you if you use any
# feature of Qt which has been marked as deprecated (the exact warnings
# depend on your compiler). Please consult the documentation of the
# deprecated API in order to know how to port your code away from it.
DEFINES += QT_DEPRECATED_WARNINGS

# You can also make your code fail to compile if you use deprecated APIs.
# In order to do so, uncomment the following line.
# You can also select to disable deprecated APIs only up to a certain version of Qt.
#DEFINES += QT_DISABLE_DEPRECATED_BEFORE=0x060000    # disables all the APIs deprecated before Qt 6.0.0

# Input
SOURCES += src/*.cpp src/gfa/*.cpp
HEADERS = src/colorButton.h src/vizlayoutmodule.h src/vizlayout.h
MOC_DIR = src/moc/
OBJECTS_DIR = obj/

isEmpty(OGDFDIR){
  system($${QMAKE_MKDIR} obj/ogdf)
  OGDF_SOURCES = $$system(find ogdf -name *.cpp)
  OGDF_CXXFLAGS = -std=c++11 -I. -O3 -DNDEBUG -Wall -Wno-deprecated-declarations -Wno-maybe-uninitialized -Wno-class-memaccess -Wno-unknown-pragmas -Wno-unknown-warning-option
  ogdf_compiler.output  = ${OBJECTS_DIR}ogdf/${QMAKE_FILE_BASE}.o
  ogdf_compiler.commands = $${QMAKE_CXX} -c ${QMAKE_FILE_NAME} $${OGDF_CXXFLAGS} -o ${QMAKE_FILE_OUT}
  ogdf_compiler.input = OGDF_SOURCES
  QMAKE_EXTRA_COMPILERS += ogdf_compiler
} else {
  INCLUDEPATH += $${OGDFDIR}/include
  LIBS += -L$${OGDFDIR} -lOGDF
}

target.path = $$PREFIX/bin
desktop.files = gfaviz.desktop
desktop.path = $$PREFIX/share/applications/
icons.path = $$PREFIX/share/icons
icons.files = gfaviz.png

INSTALLS += target desktop icons
